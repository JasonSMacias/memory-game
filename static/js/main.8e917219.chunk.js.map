{"version":3,"sources":["components/ButtonIcon.js","components/ButtonDiv.js","components/FaIcons.js","components/Modal.js","components/Colors.js","App.js","serviceWorker.js","index.js"],"names":["ButtonIcon","props","react_default","a","createElement","className","concat","color","onClick","clickCheck","icon","ButtonDiv","i","components_ButtonIcon","iconArray","array22","x","randomNum","Math","floor","random","length","splice","push","apply","Object","toConsumableArray","console","log","Modal","active","close","Colors","App","state","iconsList","FaIcons","iconColors","chosen","score","highScore","modalContent","_this","setState","iconName","chosenList","includes","updatedIconsList","sort","updatedColors","currentScore","currentHigh","_this$state","this","components_ButtonDiv","components_Modal","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8e917219.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction ButtonIcon(props) {\r\n  return (\r\n    <button \r\n      className={`button is-large ${props.color} is-size-3-tablet is-size-2-desktop`}\r\n      onClick={() => props.clickCheck(props.icon)}><i className={props.icon}></i>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default ButtonIcon;","import React from 'react';\r\nimport ButtonIcon from './ButtonIcon';\r\n\r\nfunction ButtonDiv(props) {\r\n  return (\r\n    <div className=\"column is-2\">\r\n      <ButtonIcon \r\n      icon={props.icon}\r\n      color={props.color}\r\n      clickCheck={props.clickCheck} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ButtonDiv;","\r\n  const iconArray = ['fas fa-pepper-hot', 'fas fa-candy-cane', 'fab fa-node', 'fas fa-ghost', 'fas fa-swimmer', 'fas fa-hat-wizard', 'fas fa-snowman', 'fas fa-chess', 'far fa-kiss-wink-heart', 'fas fa-robot', 'fas fa-book', 'fas fa-cloud-showers-heavy', 'fab fa-html5', 'far fa-paper-plane', 'fas fa-skull-crossbones', 'fas fa-toilet-paper', 'fas fa-cat', 'fas fa-frog', 'fas fa-helicopter', 'fas fa-mountain', 'fas fa-peace', 'fas fa-seedling', 'far fa-surprise', 'fas fa-toilet', 'fas fa-teeth', 'fas fa-shoe-prints', 'fas fa-paperclip', 'fas fa-horse', 'fas fa-horse', 'fas fa-dharmachakra', 'fas fa-dog', 'fas fa-football-ball', 'fas fa-bomb', 'fas fa-baby-carriage', 'fas fa-terminal', 'fas fa-database', 'fab fa-js-square', 'fas fa-air-freshener', 'fab fa-empire', 'fas fa-bed', 'fab fa-react', 'fab fa-rebel', 'fas fa-microscope', 'fas fa-guitar', 'fas fa-dragon', 'fas fa-dumbbell', 'fab fa-github', 'fas fa-rocket', 'fas fa-music', 'fas fa-couch', 'fas fa-crow', 'fas fa-tooth', 'fas fa-truck-monster', 'fas fa-tshirt', 'fas fa-umbrella-beach', 'fas fa-user-astronaut', 'fas fa-user-ninja', 'fas fa-user-secret', 'fas fa-walking', 'fas fa-wine-glass-alt', 'fas fa-yin-yang', 'fas fa-ankh'];\r\n\r\nlet array22 = [];\r\n\r\nlet i;\r\nfor (i=0; i < 24; i++) {\r\n  let x;\r\n  let randomNum = Math.floor(Math.random() * iconArray.length);\r\n  x = iconArray.splice(randomNum, 1);\r\n  array22.push(...x);\r\n}\r\n\r\nconsole.log(array22);\r\n\r\nexport default array22;","import React from 'react';\r\n\r\nfunction Modal(props) {\r\n\r\n  return (\r\n    <div className={props.active}>\r\n      <div className=\"modal-background\"></div>\r\n      <div className=\"modal-card\">\r\n      <section className=\"modal-card-body\">\r\n        <p className=\"has-text-centered is-size-4\">Sorry, game over.  Try again?</p>\r\n        <br />\r\n        <button className=\"button is-dark\" onClick={props.close}>Okay</button>\r\n      </section>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Modal;","\r\n// const createArray = () => {\r\n    const Colors = [];\r\n    let i;\r\n    for (i=0; i < 24; i++) {\r\n      const randomNum = Math.floor(Math.random() * 9)\r\n      switch (randomNum) {\r\n        case 1: \r\n          Colors.push(\"is-light\");\r\n          break;\r\n        case 2: \r\n          Colors.push(\"is-dark\");\r\n          break;\r\n        case 3: \r\n          Colors.push(\"is-primary\");\r\n          break;\r\n        case 4: \r\n          Colors.push(\"is-info\");\r\n          break;\r\n        case 5: \r\n          Colors.push(\"is-link\");\r\n          break;\r\n        case 6: \r\n          Colors.push(\"is-success\");\r\n          break;\r\n        case 7: \r\n          Colors.push(\"is-warning\");\r\n          break;\r\n        case 8: \r\n          Colors.push(\"is-danger\");\r\n          break;\r\n        default: \r\n          Colors.push(\"is-grey\");\r\n          break;\r\n      };\r\n    }\r\n    // return colorsArray;\r\n  // };\r\n  // let Colors = createArray();\r\n  // let test = createArray();\r\n  console.log(Colors);\r\n\r\n  export default Colors;","import React, { Component } from 'react';\nimport ButtonIcon from './components/ButtonIcon';\nimport ButtonDiv from './components/ButtonDiv';\nimport FaIcons from './components/FaIcons';\nimport Modal from './components/Modal';\nimport Colors from './components/Colors';\n\nclass App extends Component {\n  \n\n  state = {\n    iconsList: FaIcons,\n    iconColors: Colors,\n    chosen: [],\n    score: 0,\n    highScore: 0,\n    active: \"modal\",\n    modalContent: \"\"\n  }\n  \n  close = () => {\n    this.setState({active: \"modal\"});\n  };\n\n  clickCheck = iconName => {\n    \n    let chosenList = this.state.chosen;\n    if (chosenList.includes(iconName)) {\n      // reset score, re-populate icons\n      const updatedIconsList = this.state.iconsList\n        .sort(() => 0.5 - Math.random());\n      console.log(\"updated icon list in if: \"+updatedIconsList);\n      const updatedColors = this.state.iconColors\n        .sort(() => 0.5 - Math.random());\n        console.log(\"updated colors in if: \"+updatedColors);\n      this.setState({\n        iconsList: updatedIconsList,\n        iconColors: updatedColors,\n        score: 0,\n        chosen: [],\n        active: \"modal is-active\",\n      });\n    }\n    else{\n      \n      chosenList.push(iconName);\n      let currentScore = this.state.score;\n      let currentHigh = this.state.highScore;\n      currentScore++;\n      if (currentScore > currentHigh) {\n        currentHigh = currentScore;\n      };\n      const updatedIconsList = this.state.iconsList\n      .sort(() => 0.5 - Math.random());\n      const updatedColors = this.state.iconColors\n        .sort(() => 0.5 - Math.random());\n      this.setState({\n        iconsList: updatedIconsList,\n        iconColors: updatedColors,\n        chosen: chosenList,\n        score: currentScore,\n        highScore: currentHigh\n      });\n    }\n\n  };\n\n  render() {\n    const { iconsList, iconColors } = this.state;\n    console.log(`iconColors: ${iconColors}`);\n    console.log(`iconList: ${iconsList}`);\n    console.log(`iconColors at 0: ${iconColors[0]}`);\n\n    return (\n      <div className=\"container\">\n\n        <div className=\"columns is-mobile\">\n          <div className=\"column is-2 is-offset-1\">\n            <ButtonIcon \n              icon={iconsList[0]}\n              color={iconColors[0]}\n              clickCheck={this.clickCheck}\n            />\n          </div>\n          <ButtonDiv \n            icon={iconsList[1]}\n            color={iconColors[1]}\n            clickCheck={this.clickCheck}\n          />\n          <ButtonDiv \n            icon={iconsList[2]}\n            color={iconColors[2]}\n            clickCheck={this.clickCheck}\n          />\n          <ButtonDiv \n            icon={iconsList[3]}\n            color={iconColors[3]}\n            clickCheck={this.clickCheck}\n          />\n          <ButtonDiv \n            icon={iconsList[4]}\n            color={iconColors[4]}\n            clickCheck={this.clickCheck}\n          />\n        </div>\n\n        <div className=\"columns is-mobile\">\n          <div className=\"column is-2 is-offset-1\">\n            <ButtonIcon \n              icon={iconsList[5]}\n              color={iconColors[5]}\n              clickCheck={this.clickCheck}\n            />\n          </div>\n          <ButtonDiv \n            icon={iconsList[6]}\n            color={iconColors[6]}\n            clickCheck={this.clickCheck}\n          />\n          <ButtonDiv \n            icon={iconsList[7]}\n            color={iconColors[7]}\n            clickCheck={this.clickCheck}\n          />\n          <ButtonDiv \n            icon={iconsList[8]}\n            color={iconColors[8]}\n            clickCheck={this.clickCheck}\n          />\n          <ButtonDiv \n            icon={iconsList[9]}\n            color={iconColors[9]}\n            clickCheck={this.clickCheck}\n          />\n        </div>\n\n        <div className=\"columns is-mobile is-vcentered\">\n          <div className=\"column is-2 is-offset-1\">\n            <ButtonIcon \n              icon={iconsList[10]}\n              color={iconColors[10]}\n              clickCheck={this.clickCheck}\n            />\n          </div>\n          <div className=\"column is-6\">\n            <div className=\"is-size-5-mobile is-size-4-tablet is-size-2-desktop has-text-centered\">Click an icon, don't repeat!</div>\n          </div>\n\n          <ButtonDiv \n            icon={iconsList[11]}\n            color={iconColors[11]}\n            clickCheck={this.clickCheck}\n          />\n        </div>\n\n          <div className=\"columns is-vcentered is-mobile\">\n          <div className=\"column is-2 is-offset-1\">\n            <ButtonIcon \n              icon={iconsList[12]}\n              color={iconColors[12]}\n              clickCheck={this.clickCheck}\n            />\n          </div>\n          <div className=\"column is-6\">\n            <div className=\"columns is-mobile\">\n              <div className=\"column is-size-5-mobile is-size-3-tablet is-size-1-desktop has-text-right\">Score: <span className=\"has-text-danger\">{this.state.score}</span></div>\n              <div className=\"column is-size-5-mobile is-size-3-tablet is-size-1-desktop has-text-success\">Best: <span className=\"has-text-danger\">{this.state.highScore}</span></div>\n            </div>\n          </div>\n          <ButtonDiv \n            icon={iconsList[13]}\n            color={iconColors[13]}\n            clickCheck={this.clickCheck}\n          />\n        </div>\n\n        <div className=\"columns is-mobile\">\n          <div className=\"column is-2 is-offset-1\">\n            <ButtonIcon \n              icon={iconsList[14]}\n              color={iconColors[14]}\n              clickCheck={this.clickCheck}\n            />\n          </div>\n          <ButtonDiv \n            icon={iconsList[15]}\n            color={iconColors[15]}\n            clickCheck={this.clickCheck}\n          />\n          <ButtonDiv \n            icon={iconsList[16]}\n            color={iconColors[16]}\n            clickCheck={this.clickCheck}\n          />\n          <ButtonDiv \n            icon={iconsList[17]}\n            color={iconColors[17]}\n            clickCheck={this.clickCheck}\n          />\n          <ButtonDiv \n            icon={iconsList[18]}\n            color={iconColors[18]}\n            clickCheck={this.clickCheck}\n          />\n        </div>\n\n        <div className=\"columns is-mobile\">\n          <div className=\"column is-2 is-offset-1\">\n            <ButtonIcon \n              icon={iconsList[19]}\n              color={iconColors[19]}\n              clickCheck={this.clickCheck}\n            />\n          </div>\n          <ButtonDiv \n            icon={iconsList[20]}\n            color={iconColors[20]}\n            clickCheck={this.clickCheck}\n          />\n          <ButtonDiv \n            icon={iconsList[21]}\n            color={iconColors[21]}\n            clickCheck={this.clickCheck}\n          />\n          <ButtonDiv \n            icon={iconsList[22]}\n            color={iconColors[22]}\n            clickCheck={this.clickCheck}\n          />\n          <ButtonDiv \n            icon={iconsList[23]}\n            color={iconColors[23]}\n            clickCheck={this.clickCheck}\n          />\n        </div>\n        <Modal\n          active={this.state.active}\n          close={this.close}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}